<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo插件开发不规范导致集成gitment异常]]></title>
    <url>%2F110917%2Fhexo-plug-in-development-is-not-standardized%2C-resulting-in-integrated-gitment-exception%2F</url>
    <content type="text"><![CDATA[问题集成Gitment按照官方的文档配置报错Cannot read property &#39;firstChild&#39; of null 查找 通过页面的异常进入js发现是获取某个对象为空gitment-container 讲这个关键词在插件里面搜索发现,这个一个装载留言内容的div,于是在异常的页面查看源码搜索,没有找到这个div. 通过查看源码发现themes\next\layout\_third-party\comments是一个留言的插件集合,包含多种留言插件js文件12345678&#123;% include 'duoshuo.swig' %&#125;&#123;% include 'disqus.swig' %&#125;&#123;% include 'hypercomments.swig' %&#125;&#123;% include 'youyan.swig' %&#125;&#123;% include 'livere.swig' %&#125;&#123;% include 'changyan.swig' %&#125;&#123;% include 'gitment.swig' %&#125;&#123;% include 'valine.swig' %&#125; themes\next\layout\_partials是留言插件html文件comments.swig有一段代码引起我的注意1234567891011121314&#123;% elseif theme.changyan.appid and theme.changyan.appkey %&#125; &lt;div class="comments" id="comments"&gt; &lt;div id="SOHUCS"&gt;&lt;/div&gt; &lt;/div&gt; &#123;% elseif theme.gitment.enable %&#125; &lt;div class="comments" id="comments"&gt; &#123;% if theme.gitment.lazy %&#125; &lt;div onclick="showGitment()" id="gitment-display-button"&gt;&#123;&#123; __('gitmentbutton') &#125;&#125;&lt;/div&gt; &lt;div id="gitment-container" style="display:none"&gt;&lt;/div&gt; &#123;% else %&#125; &lt;div id="gitment-container"&gt;&lt;/div&gt; &#123;% endif %&#125; &lt;/div&gt; 对照themes\next\_config.yml文件12345678changyan: enable: false appid: XX appkey: XXgitment: enable: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway mint: false 要命的是之前是用畅言测试过,但是这里不是根据changyan.enable去判断,于是导致ifelse进入了畅言这个留言插件的div判断. 解决 清空themes\next\_config.yml文件中的changyan.appid和changyan.appkey,themes\next\layout\_partials\comments.swig文中,theme.changyan.appid and theme.changyan.appkey修改为theme.changyan.enable 总结 规范开发 善于关键词查找分析解决问题]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>插件</tag>
        <tag>gitment</tag>
        <tag>Hexo</tag>
        <tag>规范开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[插件或主题修改记录]]></title>
    <url>%2F110617%2Fplugins-or-subject-modification-records%2F</url>
    <content type="text"><![CDATA[短路径利于Seo 修改文章默认路径原来是YYYY改为YY文件路径%HEXO_HOME%lib\plugins\filter\post_permalink.js,方法postPermalinkFilter中的meta的year属性. 代码块颜色不够显眼 修改默认的灰色为红色,文件路径\themes\next\source\css\_variables\base.styl中前几行颜色定义$red变量改为#ff2a2a 持续更新中…]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>插件</tag>
        <tag>Hexo</tag>
        <tag>主题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高房价背后的真实逻辑（深度长篇分析）]]></title>
    <url>%2F110517%2Fthe-real-logic-behind-the-high-house-price-(dep-long-analysis)%2F</url>
    <content type="text"><![CDATA[这篇文章不做好和坏的价值判断，只谈现象背后的逻辑和规律。我会向你表达我真实的看法，但文章的结论可能会有点残酷。要不要往下读，取决于你自己。但我相信，尽早看清现实，早做打算，能够帮助你在人生的关键路口做出正确的判断。 01马太效应（强者愈强，弱者愈弱）是世间最冰冷的规则，却又无处不在。2015年，公众号“城市数据团”发表了一篇爆文《逃离你终将衰落的家乡》。文章以各省人口流动的大数据（2005年-2010年）为依据，得出了一个残酷的结论： 大都市就像抽水机，不停地从落后省份抽取劳动力，或许将来的某一天，我们就会像今天的日本一样，无数村庄和城镇凋零衰败，但东京和大阪都市圈繁华依旧。 大都市将毫不留情地吸干周边地区的血液，以便自己能够生存。残酷吗？不，因为这是年轻劳动力自己用脚（投票）投出的结果。 （图片来自“城市数据团”） 而由人口迁徙引申出来的推论，则更加触目惊心： 你还能在这些选择（逃离北上广还是逃回北上广）中犹豫，说明你无比幸福，因为你们的下一代和下下一代可能不会再有任何选择的机会。假如你最终选择留在了一个生活安逸风景如画的小城镇上，你也许会幸福地过完一生；但在你的子女到了你这个年纪的时候，很可能他们有且只有一个选择，那就是——逃离他们终将衰落的家乡。 我曾在《社会即将分层，你将会在第几层？》一文中引用了“城市数据团”的分析结论。 当时有一些人对结论持怀疑和反对态度，因为他们相信政府调控的力量。 政府一边限定了特大城市的常驻人口指标，一边强调要引导中心城市人口向周边转移（如某部委印发了《全国国土规划纲要》）。 控制特大城市规模，让各个区域平衡发展是政府调控的目标。 那么，现实情况又是怎样？ 揭开答案前，先来看看日本的情况。 日本有三个地方GDP特别高，那就是东京、名古屋和大阪，这三个地方的GDP加起来，占全日本GDP总量的80%以上，所以这三个地方又被称为日本的三大都市圈。 根据日本总务省2014年公布的数据，三大都市圈人口总数高达6439.33万人，占日本全国总人口的50.93%， 到了2017年，这个数据变成了6453.26万人，人口数占比达到了51.38%。 也就是说，哪怕是在人口负增长的国家，人们依然在源源不断地向发达地区聚集。 这就是人口的聚集效应。 中国聚集效应则更加明显。 今年年初，“城市数据团”发布了文章《曾经熟悉的家乡终将成为倍感孤独的地方》。文章根据2014年-2016年春运大数据，再次揭示了这个残酷的事实： 相比于2005-2010年期间的数据，最近3年全国人口流动的集聚程度仍然在进一步地提高。 大城市的人口抽血能力并没有减缓，反而在持续地加强。 更多地方的人们愿意跋涉更远的距离，承担更高的成本，以逃离他们的家乡。 （一线城市从全国人口抽血盛况） （准一线城市抽血地图） 为什么会这样？ 有网友给出了这样的答案： 人向大城市集中，因为大城市有更多的就业机会，有更好的发展，比如做IT的，就要往北上杭深走；但是，很少有大城市的人走向小城市去，因为小城市有的，大城市基本也有。另外，交通的发展也导致了大城市对小城市人员的吸引，在前些年高铁热的时候，基本所有的地方政府都认为高铁来了，钱就到了，但更多的是，高铁来了，人就走了。具体到我们家来说，县里只有几家大企业，能做的是制造业、商业这些，但这些需要的工人较多，走出去的大学生很少去做这个；另一方面，你在外读书期间习惯了大城市的生活，读书馆、电影院、博物馆、书店、游乐场，县里没有啊。 很多人误以为政府的调控是无所不能的，他们错了。 社会运行自有其内在规律。 人口迁移遵循聚集效应，社会发展遵循马太效应。 大都市拥有优质的政治资源、商业资源、教育资源、人力资源……这些优质资源吸引着无数优秀的年轻人，而优秀的年轻人将推动大都市的繁荣发展，从而让大都市获取更多的资源，于是形成了一个优势迭代的良性循环，这就是马太效应中的强者愈强。 然而，大都市在攫取优秀人才的同时，也在用高额的房价和户籍制度将千千万万的普通人挤到繁华都市的边缘，将他们赶到逼仄的地下室，脏乱的出租房，直到他们梦碎的那一天，收起行囊，滚回家乡，然后他们的下一代再背起行囊，逃离家乡。 这就是马太效应的另一面，弱者愈弱。 这听起来非常残酷，却又无比现实。 02前几天我发起了关于房价的意见征集，有一位读者给我留言说： 我们在北京的时候年收入近50万买不起房子，后果就是举家撤离，再也无法享受北京的生活便利、以及包括医疗和教育在内的各种资源。离开北京一年了，和其他地方相比，感觉北京除了房子贵，其他都是相当便宜的！现在后悔得很，买不起房直接导致我和孩子们命运轨迹的改变！所以，在北京，只要有预估能力，就应该贷款买房！ 这条留言指出了房子的真正价值。 当你买房的时候，买的并不仅仅是一个遮风避雨的居住场所，还包括周边提供的医疗、教育、交通、娱乐、公用服务以及发展机遇。 比如说，北大的很多课程都是对外开放的，如果你住在北大边上，你可以免费享受中国最顶尖的教育资源。 再拿学区房为例。 很多人说，天价学区房是国人的焦虑感和功利性心态造就的，但他们不知道，学区房的概念其实起源于美国。 吴军老师在他的专栏写过一篇文章《怎么看名校毕业生在北京买不起学区房》，里面有这样一段介绍： 美国好学区的房价和差学区的房价差别比中国要厉害得多，很多时候，隔着一条街，房价可以差几倍。在硅谷中心的帕罗阿图市（Palo Alto虽然叫做城市，但它只有两万人，相当于中国的一个小镇），处于中值水平的独栋房房价在300万美元以上，而和它只隔着一条马路的东帕罗阿图中位数房价只有60-80万美元左右。 这两个区的差别有多大呢？一边住着拉里·佩奇、扎克伯格，以及很多斯坦福的教授，过去乔布斯也在那里，另一边是很多中低收入的墨西哥裔居民，包括不少非法移民。 在美国，没有人觉得这种划分学区的方法有什么不好，因为大家习惯了。但是久而久之，学区好的地方聚集着比较体面、富有的一些家庭，不好的学区，整个条件都比较差，这是一个事实，而且很长时间几乎没有改变过。 万维钢老师在《美国教育各阶层分析》一文中也提到了类似的观点： 美国是个有严重阶层区分的国家，各社区按房价自然分开，在某种意义上是事实上的种族和贫富隔离。公立中小学的经费主要由所在学区的房产税而来，这意味着两点：第一，富人区的学校更有钱，可以请更好的老师、用更好的设备、有更高的教学水平；第二，学生们其实是在跟自己同阶层的人一起上学。 教育资源不是标注品，必定有高下之分，而优质的教育资源永远是稀缺的。 学区房的出现，本质上是一种教育资源的分配方案。 当你买下学区房的时候，买的是下一代接受良好教育的入场券。 03“房子是用来住的，不是用来炒的。” 今年的大会，这句话非常鼓舞人心。 但有太多人误解了这句话。 其完全的表述是： “坚持房子是用来住的、不是用来炒的定位，加快建立多主体供给、多渠道保障、租购并举的住房制度，让全体人民住有所居。” 什么叫多渠道保障？ 什么叫租购并举？ 什么叫让你住有所居？ 大会只承诺了房子的居住功能，并没有承诺你可以轻易地拥有房屋的产权，更没有承诺你能拥有房子背后的隐性价值。 其实早在去年3月的时候，发改委主任就曾提出：现在我国租房比例太低，购和租要并举。 政策的大方向是要推广房屋租赁，而不是让你买得起房。 是政府不重视民生问题吗？ 并不是。 先来看看国外的情况。 根据欧盟统计局2014年的数据，欧盟28国的所有人口中，有近三成(29.9%)的人是租房子住的，其中德国的租房比例达到了47.5%，仅52.5%的人居住在自有住房内。 也就是说，将近一半的德国人都是租房的。 美国的情况也是类似。 根据皮尤研究中心的一项调查显示，2006年，57%的35岁以下家庭是租房子居住的。到了2016年，这个比例已经提高到了65% 把年龄放宽一点，35至44岁的美国家庭中，租房的比例依然高达41%。 这还只是平均数据，如果把目光聚焦到全球范围内的一线城市，当地人拥有住房的比例更低。 比如德国的首都柏林，住房拥有率只有15.6%，有将近85%的人都只能租房子住。 （图片来自公众号“财经连环话”） 再来看看我们的春运人口迁移图你就会明白： 中国的人口基数太大了，但大城市的土地资源是有限的。 在有限的土地上，怎么可能满足所有人在大城市买房的需求？ 唯有加快推广租赁。 从这一点来讲，租售并举的政策大方向是没错的。 但连带提出的“租售同权”则纯粹是在画大饼了。 04今年7月，一篇名为《突发，楼市巨变！广州宣布：租售同权》的文章突然刷屏了，原因是广州出台了《关于印发广州市加快发展住房租赁市场工作方案的通知》，通知里有这么一句话： “赋予符合条件的承租人子女享有就近入学等公共服务权益，保障租购同权。” 于是那篇爆文的作者这样解读道： 从今天开始，中国的买房终于和教育资源脱钩了，没有房，小孩照样可以上学了。 这绝对是一次历史创举，具体未来的影响可能远超我们的想象，但绝对是我们现在无法估量的。 但就像我在前面说了，学区房的本质是一种教育资源的分配方案。 在教育资源没有变多，而大城市人口还在不断聚集的情况下，“租售同权”完全是个伪概念。 当适龄的报名儿童超过学校招生计划时，学校会怎么做？ 杭州就有关于“一表生”、“二表生”的录取规则。 即学校应该根据学龄儿童户籍和家庭住宅情况，按照“住、户一致”优先原则，按下面四种先后顺序录取： 05楼市有泡沫吗？ 有啊，但不在一线城市，而是在三四五六线城市。 2016年和2017年经历了两波房价的暴涨，但这两波的性质是不同的。 2016年的那波暴涨，是因为实业资本转移到了一二线城市的楼市，推高了房价，随后炒房团涌入，再次推高房价，但钱都是流向大城市的。 但2017年这一波就不一样了。 因为2016年的这波暴涨，政府开始调控了。 42个大城市（截止9月23日）先后出台了限售、限购等政策，炒房团买不了房了，于是纷纷涌向了三四线城市。 但是，在三四线城市： 有优质的教育资源吗？ 有优质的医疗服务吗？ 有丰富的娱乐场所吗？ 有良好的公共服务吗？ 有广阔的发展机遇吗？ 都没有。 这不过是一场击鼓传花的游戏。 最后接盘的那些投机客，他们将会为自己炒高房价的行为付出代价。 06经济学家马光远提出过楼市的后视镜原理： 从房价的基本规律看，在一个国家城市的人口净增加，一个国家的人口转折点没有到来，以及一个国家的人均GDP尚未超越中等收入水平的情况下，资产价格长期的趋势仍然是向上的，无一例外。今天看到的资产价格的高点，明天很可能只是半山腰而已。 回顾过去20年中国房价，站在当时的时空下，每年都觉得房价很高，但回过头看，那些以前认为高不可攀的价格，现在看起来是不是很便宜？ 这就是房价的“后视镜”原理。 只要中国的经济持续向前发展，大城市的房子就依然会升值。 这里的大城市，是指四个一线城市及杭州、南京、苏州等几个重点二线城市。 这些大城市的房价中，包含了教育、医疗、交通、娱乐、公共服务、发展机遇等隐性价值，正是这些隐性价值支撑着其高昂的房价。 要记住一点：优质的资源永远是稀缺的，稀缺的资源永远是昂贵的。 土地的总量是有限的，而想要定居大城市的人是源源不断的。 大城市好地段的房子是有形且有限的资源，买房的本质就是占有资源。 还要记住的一点是：财富是以家庭为单位的。 我以前写过这么一段话： 年轻人可以不靠父母在大城市买房吗？ 对于70后而言，这样的想法叫志气；对于80后而言，想要实现靠机遇；对于90后而言，如果还抱着这样的想法，只能说是学生气。 如果你的家庭有足够的实力，我强烈建议你们尽早在一线城市买房。 如果负担太大，也可以退而求其次，在重点二线城市买。 中国未来的房价地图也会围绕三大都市圈和个别的交通枢纽城市展开。或许短期内房价会波动，但从长期看，依然会升值。 这是我的判断，并且我对自己的判断很有信心。 如果你的家庭无法支撑起你在一二线城市买房，你也可以有两种选择： 在大城市租房打拼，我知道这样会很辛苦，但多少会给你带来改一点变命运的机会。 回到你的家乡，那里有你童年的记忆和年迈的父母亲戚，但可能没有你孩子的未来（原因见人口的流动）。 （有网友说，这就像一群没核的红细胞从肢体末端蜂拥至心脏） 这两个选择没有对错，但每种选择都有其代价，而人生，则是一个又一个选择叠加起来的总和。 十年后你所站立的地方，你下一代所站立的起点，都是你今天的选择所带来的结果。 P.s 关于房价，其实还有很多因素可以讲，比如土地供应、货币超发等等，但这些都不是决定性因素，而且这篇文章已经快6000字了，就不再多说了。 关于中国的三大都市圈和个别的交通枢纽城市，我会另写一篇。 再P.s **总有人问，为什么每次越调控房价涨得越快。 其实他们是把因果关系搞反了。 并不是因为调控导致房价上涨，而是房价本来就要往上涨，但政府通过各种手段（限价、限售等）强行暂停了房价的上涨。所以一旦调控放开之后，房价立即就会补涨。** 对于房价的管制，北大的薛兆丰老师有一个比喻： 你仅仅按住价格，并不能改变价格背后的现实。这好比你管不住温度，却非要去管温度计一样荒唐。 再再P.s 《魔鬼经济学》中有一句话我印象非常深刻： “如果说伦理道德代表了我们心目中理想的社会运行模式的话，那么经济学就是在向我们描述这个社会到底是如何运行的。” 很多时候，我们乐于相信生活应该是什么样子的，但沉溺在自己的理想世界并不能解决任何问题，看清现实，早做打算，才是对自己的人生负责。 这篇文章虽然一点也不温暖，甚至有点冷漠，但我相信看完后它会对你有所帮助。 转载自 雪球 资本x时代]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>房子</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[二进制位运算实例]]></title>
    <url>%2F103117%2Finstance-of-binary-bit-operation%2F</url>
    <content type="text"><![CDATA[二进制位运算实例问题设计多选题的选项问题,一道题有多个选项ABCD,可能有更多如何设计更有效存储识别? 分析选项只有选与不选的区别,而且总的个数固定,而且判定2个结果是否存在(答案是否正确),二进制完全满足条件. 结果单个选项12345A：1 1B: 1 &lt;&lt; 1 2C: 1 &lt;&lt; 2 4D: 1 &lt;&lt; 3 8... 组合选项123AB： 1|2BC: 2|4ABCD: 1|2|4|8 比较答案正确答案 ABC : 1|2|4 --&gt; 7 用户选择 AB : 1|2 --&gt; 3 运算 3!=7 &amp;&amp; 3|7=7 说明部分答对 用户选择 BD : 2|8 --&gt; 10 运算 10!=7 &amp;&amp; 10|7=!7 说明有错误选项 相关知识Java位运算(移位、位与、或、异或、非）]]></content>
      <categories>
        <category>Java相关</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>二进制</tag>
        <tag>Java基础</tag>
        <tag>位运算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[InvalidClassException]]></title>
    <url>%2F103117%2Finvalidclasexception%2F</url>
    <content type="text"><![CDATA[InvalidClassException背景项目使用的SpringBoot架构,使用的是默认的Redis存储登陆信息 过程添加了一个有关于UsUser的接口,需要把当前登录信息返回给前端。 结果访问时InvalidClassException异常12org.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.InvalidClassException: com.usc.core.model.UsUser; local class incompatible: stream classdesc serialVersionUID = -4391106051528831723, local class serialVersionUID = -3047559744731102659 at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:82) 思考&amp;总结看到这个的第一反应是有人修改了serialVersionUID,然后发现这个类并没有这个字段.然后联想到这个信息是从redis获取的然后清理了redis中的登陆信息,异常不再出现.最后注意到这个org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize,已证明联想正确,出现问题到解决5分钟不到. 相关知识serialVersionUID适用于Java的序列化机制。简单来说，Java的序列化机制是通过判断类的serialVersionUID来验证版本一致性的。在进行反序列化时，JVM会把传来的字节流中的serialVersionUID与本地相应实体类的serialVersionUID进行比较，如果相同就认为是一致的，可以进行反序列化，否则就会出现序列化版本不一致的异常，即是InvalidCastException。]]></content>
      <categories>
        <category>Java相关</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
        <tag>Exception</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SpringCloud-config client不能连接server]]></title>
    <url>%2F103017%2Fspringcloud-config-client-canot-conect-to-server%2F</url>
    <content type="text"><![CDATA[错误详情 config clientjava代码1new SpringApplicationBuilder(Application.class).properties("spring.cloud.config.enabled:true").web(true).run(args); yml配置123456789spring: application: name: masque cloud: config: uri: http://localhost:8888 profile: dev label: final enabled: true 依赖12345678910111213141516&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-starter-config&lt;/artifactId&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt; &lt;artifactId&gt;spring-cloud-config-server&lt;/artifactId&gt; &lt;/dependency&gt;&lt;/dependencies&gt; 出现的问题官方示例中不需要配置 spring.cloud.config.enabled默认是true现在的情况是必须配置这两个enabled,否则client不会去找server 项目正常启动,没有任何异常 解决办法在对照了所有的java代码,翻阅了网上的一些博客发现,client多了一个依赖spring-cloud-config-server 去掉这个就正常了]]></content>
      <categories>
        <category>Java相关</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序员]]></title>
    <url>%2F102217%2Fprogramer%2F</url>
    <content type="text"><![CDATA[&ensp;&ensp;&ensp;&ensp;公司最值钱的东西是产品，如果要问比产品更有价值的是什么？我认为是实实在在做事情的程序员们。 &ensp;&ensp;&ensp;&ensp;他们虽然工资不高，每天坐在位置上敲着代码，在很多人眼中被称为“屌丝”或“宅男”，但我认为恰恰就是这些人，他们才是公司最有价值的人。 &ensp;&ensp;&ensp;&ensp;他们有自己的理想，希望能够通过自己的努力，从中得到那一点点所谓的成就感。他们需要理解产品经理真正的意图，把想法变成现实，让产品真正落地。他们更容易把握细节，而这些细节往往决定着产品的命运与成败。他们突如其来的跳槽，对我们的项目的交付有直接的影响。他们在一起工作的气氛，能体现技术公司的文化与底蕴。由此看来，对程序员的重视是相当有必要的，我们需要关心每一位程序员的职业发展，让他们在团队里能够充分地发挥出自己的能力。 &ensp;&ensp;&ensp;&ensp;我们也需要对他们倍加关注，挖掘出有能力、肯吃苦、敢担当的人，给他们更多的机会，让他们成为技术领袖。 &ensp;&ensp;&ensp;&ensp;互联网技术公司需要大量这样的程序员： 他们是一群有着技术信仰的人，他们是一群热爱编程的人，他们是一群不解决问题睡不好觉的人。 他们不是打杂的，不是外包，更不是工具。 他们不喜欢被忽悠，不喜欢被冷落，更不喜欢被驱动。 他们需要尊重，需要培养，更需要激情！ 转载自 开源社区 黄勇的博客]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>转载</tag>
        <tag>程序员</tag>
      </tags>
  </entry>
</search>
